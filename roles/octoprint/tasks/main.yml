---
- set_fact:
    virtualenv_dir: "{{ install_dir }}/.venv"

- name: Setting new hostname
  hostname: 
    name: "{{ new_hostname }}"
  become: true
  tags:
    - init

- name: Create OctoPrint user group
  group: 
    name: OctoPrint
    state: present
  become: true

- name: Add user {{ username }} to OctoPrint, tty and dialout groups
  user: 
    name: "{{ username }}"
    groups:
      - OctoPrint
      - tty
      - dialout
    append: yes
  become: true

- name: Installing required packages
  apt: 
    name: "{{ item }}"
    state: latest
    update_cache: yes
    cache_valid_time: 3600
  with_items:
    - python3-virtualenv
    - python3-pip
    - python3-dev
    - avahi-daemon
    - libpq-dev
  become: true
  tags:
    - init

- name: Create {{ install_dir }} directory
  file: 
    path: "{{ install_dir }}"
    mode: 0755
    state: directory
    owner: "{{ username }}"
    group: OctoPrint
  become: true
  tags:
    - init

- name: Download OctoPrint source
  git: 
    repo: https://github.com/foosel/OctoPrint.git
    dest: "{{ install_dir }}"
  become: true
  become_user: "{{ username }}"
  tags:
    - code

- stat:
    path: "{{ virtualenv_dir }}/bin/activate"
  register: virtualenv_stats
  tags:
    - code

- name: Create virtualenv {{ virtualenv_dir }} (if it does not already exist)
  command: "virtualenv --prompt=\"(OctoPrint) \" {{ virtualenv_dir }}"
  become: true
  become_user: "{{ username }}"
  when: not virtualenv_stats.stat.exists
  tags:
    - code

- name: Update pip
  pip:
    name: pip
    state: latest
    virtualenv: "{{ virtualenv_dir }}"
  become: true
  become_user: "{{ username }}"
  tags:
    - code

- name: Install OctoPrint
  pip:
    name: "OctoPrint"
    virtualenv: "{{ virtualenv_dir }}"
  become: true
  become_user: "{{ username }}"
  ignore_errors: true
  tags:
    - code

- name: Install Postgres Adapter
  pip:
    name: "psycopg2"
    virtualenv: "{{ virtualenv_dir }}"
  become: true
  become_user: "{{ username }}"
  ignore_errors: true
  tags:
    - code

- name: Install OctoPrint systemd Unit
  template: 
    src: octoprint.service.j2
    dest: "/etc/systemd/system/octoprint-{{ printer_name }}.service"
  become: true
  tags:
    - service

- name: reload systemd
  command: systemctl daemon-reload
  become: true
  tags:
    - service

- name: Enable and start OctoPrint service
  service: 
    name: "octoprint-{{ printer_name }}"
    enabled: yes
    state: restarted
  become: true
  tags:
    - service

- include: plugins.yml

- include: haproxy.yml
  when: install_haproxy == "y" or install_haproxy == "Y"

- include: touchui.yml
  when: install_touchui == "y" or install_touchui == "Y"

- name: Restart octoprint to register new changes
  service: 
    name: "octoprint-{{ printer_name }}"
    state: restarted
  become: true
  tags:
    - service

# excluded until completed
#- include: webcam.yml
